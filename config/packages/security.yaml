security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        App\Entity\User: bcrypt
    providers:
        # # in_memory: { memory: ~ }
        # manager:
        #     memory:
        #         users:
        #             admin:
        db_provider: 
            entity:
                class: App\Entity\User
                property: username
        # role_hierarchy:
        #     ROLE_ADMIN:       ROLE_USER
        #     ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            provider: db_provider
            form_login:
                login_path: user_login
                check_path: user_login
                default_target_path: event_list
            logout:
                path: /logout
                target: / 
                # invalidate_session: true  ->par defaut

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
